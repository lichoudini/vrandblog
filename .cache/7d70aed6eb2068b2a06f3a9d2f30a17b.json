{"dependencies":[{"name":"C:\\Users\\kea_h\\vrandblog\\package.json","includedInParent":true,"mtime":1521485357193},{"name":"C:\\Users\\kea_h\\vrandblog\\.babelrc","includedInParent":true,"mtime":1521251480440},{"name":"C:\\Users\\kea_h\\vrandblog\\node_modules\\sshpk\\package.json","includedInParent":true,"mtime":1521485356168},{"name":"assert-plus","loc":{"line":16,"column":21}},{"name":"../algs","loc":{"line":17,"column":19}},{"name":"../utils","loc":{"line":18,"column":20}},{"name":"../key","loc":{"line":19,"column":18}},{"name":"../private-key","loc":{"line":20,"column":25}},{"name":"../ssh-buffer","loc":{"line":21,"column":24}},{"name":"buffer"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\n// Copyright 2015 Joyent, Inc.\n\nmodule.exports = {\n\tread: read.bind(undefined, false, undefined),\n\treadType: read.bind(undefined, false),\n\twrite: write,\n\t/* semi-private api, used by sshpk-agent */\n\treadPartial: read.bind(undefined, true),\n\n\t/* shared with ssh format */\n\treadInternal: read,\n\tkeyTypeToAlg: keyTypeToAlg,\n\talgToKeyType: algToKeyType\n};\n\nvar assert = require('assert-plus');\nvar algs = require('../algs');\nvar utils = require('../utils');\nvar Key = require('../key');\nvar PrivateKey = require('../private-key');\nvar SSHBuffer = require('../ssh-buffer');\n\nfunction algToKeyType(alg) {\n\tassert.string(alg);\n\tif (alg === 'ssh-dss')\n\t\treturn ('dsa');\n\telse if (alg === 'ssh-rsa')\n\t\treturn ('rsa');\n\telse if (alg === 'ssh-ed25519')\n\t\treturn ('ed25519');\n\telse if (alg === 'ssh-curve25519')\n\t\treturn ('curve25519');\n\telse if (alg.match(/^ecdsa-sha2-/))\n\t\treturn ('ecdsa');\n\telse\n\t\tthrow (new Error('Unknown algorithm ' + alg));\n}\n\nfunction keyTypeToAlg(key) {\n\tassert.object(key);\n\tif (key.type === 'dsa')\n\t\treturn ('ssh-dss');\n\telse if (key.type === 'rsa')\n\t\treturn ('ssh-rsa');\n\telse if (key.type === 'ed25519')\n\t\treturn ('ssh-ed25519');\n\telse if (key.type === 'curve25519')\n\t\treturn ('ssh-curve25519');\n\telse if (key.type === 'ecdsa')\n\t\treturn ('ecdsa-sha2-' + key.part.curve.data.toString());\n\telse\n\t\tthrow (new Error('Unknown key type ' + key.type));\n}\n\nfunction read(partial, type, buf, options) {\n\tif (typeof (buf) === 'string')\n\t\tbuf = new Buffer(buf);\n\tassert.buffer(buf, 'buf');\n\n\tvar key = {};\n\n\tvar parts = key.parts = [];\n\tvar sshbuf = new SSHBuffer({buffer: buf});\n\n\tvar alg = sshbuf.readString();\n\tassert.ok(!sshbuf.atEnd(), 'key must have at least one part');\n\n\tkey.type = algToKeyType(alg);\n\n\tvar partCount = algs.info[key.type].parts.length;\n\tif (type && type === 'private')\n\t\tpartCount = algs.privInfo[key.type].parts.length;\n\n\twhile (!sshbuf.atEnd() && parts.length < partCount)\n\t\tparts.push(sshbuf.readPart());\n\twhile (!partial && !sshbuf.atEnd())\n\t\tparts.push(sshbuf.readPart());\n\n\tassert.ok(parts.length >= 1,\n\t    'key must have at least one part');\n\tassert.ok(partial || sshbuf.atEnd(),\n\t    'leftover bytes at end of key');\n\n\tvar Constructor = Key;\n\tvar algInfo = algs.info[key.type];\n\tif (type === 'private' || algInfo.parts.length !== parts.length) {\n\t\talgInfo = algs.privInfo[key.type];\n\t\tConstructor = PrivateKey;\n\t}\n\tassert.strictEqual(algInfo.parts.length, parts.length);\n\n\tif (key.type === 'ecdsa') {\n\t\tvar res = /^ecdsa-sha2-(.+)$/.exec(alg);\n\t\tassert.ok(res !== null);\n\t\tassert.strictEqual(res[1], parts[0].data.toString());\n\t}\n\n\tvar normalized = true;\n\tfor (var i = 0; i < algInfo.parts.length; ++i) {\n\t\tvar p = parts[i];\n\t\tp.name = algInfo.parts[i];\n\t\t/*\n\t\t * OpenSSH stores ed25519 \"private\" keys as seed + public key\n\t\t * concat'd together (k followed by A). We want to keep them\n\t\t * separate for other formats that don't do this.\n\t\t */\n\t\tif (key.type === 'ed25519' && p.name === 'k')\n\t\t\tp.data = p.data.slice(0, 32);\n\n\t\tif (p.name !== 'curve' && algInfo.normalize !== false) {\n\t\t\tvar nd;\n\t\t\tif (key.type === 'ed25519') {\n\t\t\t\tnd = utils.zeroPadToLength(p.data, 32);\n\t\t\t} else {\n\t\t\t\tnd = utils.mpNormalize(p.data);\n\t\t\t}\n\t\t\tif (nd.toString('binary') !==\n\t\t\t    p.data.toString('binary')) {\n\t\t\t\tp.data = nd;\n\t\t\t\tnormalized = false;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (normalized)\n\t\tkey._rfc4253Cache = sshbuf.toBuffer();\n\n\tif (partial && typeof (partial) === 'object') {\n\t\tpartial.remainder = sshbuf.remainder();\n\t\tpartial.consumed = sshbuf._offset;\n\t}\n\n\treturn (new Constructor(key));\n}\n\nfunction write(key, options) {\n\tassert.object(key);\n\n\tvar alg = keyTypeToAlg(key);\n\tvar i;\n\n\tvar algInfo = algs.info[key.type];\n\tif (PrivateKey.isPrivateKey(key))\n\t\talgInfo = algs.privInfo[key.type];\n\tvar parts = algInfo.parts;\n\n\tvar buf = new SSHBuffer({});\n\n\tbuf.writeString(alg);\n\n\tfor (i = 0; i < parts.length; ++i) {\n\t\tvar data = key.part[parts[i]].data;\n\t\tif (algInfo.normalize !== false) {\n\t\t\tif (key.type === 'ed25519')\n\t\t\t\tdata = utils.zeroPadToLength(data, 32);\n\t\t\telse\n\t\t\t\tdata = utils.mpNormalize(data);\n\t\t}\n\t\tif (key.type === 'ed25519' && parts[i] === 'k')\n\t\t\tdata = Buffer.concat([data, key.part.A.data]);\n\t\tbuf.writeBuffer(data);\n\t}\n\n\treturn (buf.toBuffer());\n}\n","map":{"mappings":[{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\rfc4253.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}}],"sources":{"node_modules\\sshpk\\lib\\formats\\rfc4253.js":"// Copyright 2015 Joyent, Inc.\n\nmodule.exports = {\n\tread: read.bind(undefined, false, undefined),\n\treadType: read.bind(undefined, false),\n\twrite: write,\n\t/* semi-private api, used by sshpk-agent */\n\treadPartial: read.bind(undefined, true),\n\n\t/* shared with ssh format */\n\treadInternal: read,\n\tkeyTypeToAlg: keyTypeToAlg,\n\talgToKeyType: algToKeyType\n};\n\nvar assert = require('assert-plus');\nvar algs = require('../algs');\nvar utils = require('../utils');\nvar Key = require('../key');\nvar PrivateKey = require('../private-key');\nvar SSHBuffer = require('../ssh-buffer');\n\nfunction algToKeyType(alg) {\n\tassert.string(alg);\n\tif (alg === 'ssh-dss')\n\t\treturn ('dsa');\n\telse if (alg === 'ssh-rsa')\n\t\treturn ('rsa');\n\telse if (alg === 'ssh-ed25519')\n\t\treturn ('ed25519');\n\telse if (alg === 'ssh-curve25519')\n\t\treturn ('curve25519');\n\telse if (alg.match(/^ecdsa-sha2-/))\n\t\treturn ('ecdsa');\n\telse\n\t\tthrow (new Error('Unknown algorithm ' + alg));\n}\n\nfunction keyTypeToAlg(key) {\n\tassert.object(key);\n\tif (key.type === 'dsa')\n\t\treturn ('ssh-dss');\n\telse if (key.type === 'rsa')\n\t\treturn ('ssh-rsa');\n\telse if (key.type === 'ed25519')\n\t\treturn ('ssh-ed25519');\n\telse if (key.type === 'curve25519')\n\t\treturn ('ssh-curve25519');\n\telse if (key.type === 'ecdsa')\n\t\treturn ('ecdsa-sha2-' + key.part.curve.data.toString());\n\telse\n\t\tthrow (new Error('Unknown key type ' + key.type));\n}\n\nfunction read(partial, type, buf, options) {\n\tif (typeof (buf) === 'string')\n\t\tbuf = new Buffer(buf);\n\tassert.buffer(buf, 'buf');\n\n\tvar key = {};\n\n\tvar parts = key.parts = [];\n\tvar sshbuf = new SSHBuffer({buffer: buf});\n\n\tvar alg = sshbuf.readString();\n\tassert.ok(!sshbuf.atEnd(), 'key must have at least one part');\n\n\tkey.type = algToKeyType(alg);\n\n\tvar partCount = algs.info[key.type].parts.length;\n\tif (type && type === 'private')\n\t\tpartCount = algs.privInfo[key.type].parts.length;\n\n\twhile (!sshbuf.atEnd() && parts.length < partCount)\n\t\tparts.push(sshbuf.readPart());\n\twhile (!partial && !sshbuf.atEnd())\n\t\tparts.push(sshbuf.readPart());\n\n\tassert.ok(parts.length >= 1,\n\t    'key must have at least one part');\n\tassert.ok(partial || sshbuf.atEnd(),\n\t    'leftover bytes at end of key');\n\n\tvar Constructor = Key;\n\tvar algInfo = algs.info[key.type];\n\tif (type === 'private' || algInfo.parts.length !== parts.length) {\n\t\talgInfo = algs.privInfo[key.type];\n\t\tConstructor = PrivateKey;\n\t}\n\tassert.strictEqual(algInfo.parts.length, parts.length);\n\n\tif (key.type === 'ecdsa') {\n\t\tvar res = /^ecdsa-sha2-(.+)$/.exec(alg);\n\t\tassert.ok(res !== null);\n\t\tassert.strictEqual(res[1], parts[0].data.toString());\n\t}\n\n\tvar normalized = true;\n\tfor (var i = 0; i < algInfo.parts.length; ++i) {\n\t\tvar p = parts[i];\n\t\tp.name = algInfo.parts[i];\n\t\t/*\n\t\t * OpenSSH stores ed25519 \"private\" keys as seed + public key\n\t\t * concat'd together (k followed by A). We want to keep them\n\t\t * separate for other formats that don't do this.\n\t\t */\n\t\tif (key.type === 'ed25519' && p.name === 'k')\n\t\t\tp.data = p.data.slice(0, 32);\n\n\t\tif (p.name !== 'curve' && algInfo.normalize !== false) {\n\t\t\tvar nd;\n\t\t\tif (key.type === 'ed25519') {\n\t\t\t\tnd = utils.zeroPadToLength(p.data, 32);\n\t\t\t} else {\n\t\t\t\tnd = utils.mpNormalize(p.data);\n\t\t\t}\n\t\t\tif (nd.toString('binary') !==\n\t\t\t    p.data.toString('binary')) {\n\t\t\t\tp.data = nd;\n\t\t\t\tnormalized = false;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (normalized)\n\t\tkey._rfc4253Cache = sshbuf.toBuffer();\n\n\tif (partial && typeof (partial) === 'object') {\n\t\tpartial.remainder = sshbuf.remainder();\n\t\tpartial.consumed = sshbuf._offset;\n\t}\n\n\treturn (new Constructor(key));\n}\n\nfunction write(key, options) {\n\tassert.object(key);\n\n\tvar alg = keyTypeToAlg(key);\n\tvar i;\n\n\tvar algInfo = algs.info[key.type];\n\tif (PrivateKey.isPrivateKey(key))\n\t\talgInfo = algs.privInfo[key.type];\n\tvar parts = algInfo.parts;\n\n\tvar buf = new SSHBuffer({});\n\n\tbuf.writeString(alg);\n\n\tfor (i = 0; i < parts.length; ++i) {\n\t\tvar data = key.part[parts[i]].data;\n\t\tif (algInfo.normalize !== false) {\n\t\t\tif (key.type === 'ed25519')\n\t\t\t\tdata = utils.zeroPadToLength(data, 32);\n\t\t\telse\n\t\t\t\tdata = utils.mpNormalize(data);\n\t\t}\n\t\tif (key.type === 'ed25519' && parts[i] === 'k')\n\t\t\tdata = Buffer.concat([data, key.part.A.data]);\n\t\tbuf.writeBuffer(data);\n\t}\n\n\treturn (buf.toBuffer());\n}\n"},"lineCount":167}},"hash":"9febafbf0eecc35f749232dfc426ba6b","cacheData":{"env":{}}}