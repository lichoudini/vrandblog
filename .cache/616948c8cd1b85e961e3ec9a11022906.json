{"dependencies":[{"name":"C:\\Users\\kea_h\\vrandblog\\package.json","includedInParent":true,"mtime":1521988836233},{"name":"C:\\Users\\kea_h\\vrandblog\\.babelrc","includedInParent":true,"mtime":1521988825970},{"name":"C:\\Users\\kea_h\\vrandblog\\node_modules\\public-encrypt\\package.json","includedInParent":true,"mtime":1521988834447},{"name":"create-hash","loc":{"line":1,"column":25}},{"name":"buffer"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\nvar createHash = require('create-hash');\r\nmodule.exports = function (seed, len) {\r\n  var t = new Buffer('');\r\n  var  i = 0, c;\r\n  while (t.length < len) {\r\n    c = i2ops(i++);\r\n    t = Buffer.concat([t, createHash('sha1').update(seed).update(c).digest()]);\r\n  }\r\n  return t.slice(0, len);\r\n};\r\n\r\nfunction i2ops(c) {\r\n  var out = new Buffer(4);\r\n  out.writeUInt32BE(c,0);\r\n  return out;\r\n}","map":{"mappings":[{"source":"node_modules\\public-encrypt\\mgf.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules\\public-encrypt\\mgf.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules\\public-encrypt\\mgf.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules\\public-encrypt\\mgf.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules\\public-encrypt\\mgf.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules\\public-encrypt\\mgf.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules\\public-encrypt\\mgf.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules\\public-encrypt\\mgf.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules\\public-encrypt\\mgf.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules\\public-encrypt\\mgf.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules\\public-encrypt\\mgf.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules\\public-encrypt\\mgf.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules\\public-encrypt\\mgf.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules\\public-encrypt\\mgf.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules\\public-encrypt\\mgf.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules\\public-encrypt\\mgf.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}}],"sources":{"node_modules\\public-encrypt\\mgf.js":"var createHash = require('create-hash');\r\nmodule.exports = function (seed, len) {\r\n  var t = new Buffer('');\r\n  var  i = 0, c;\r\n  while (t.length < len) {\r\n    c = i2ops(i++);\r\n    t = Buffer.concat([t, createHash('sha1').update(seed).update(c).digest()]);\r\n  }\r\n  return t.slice(0, len);\r\n};\r\n\r\nfunction i2ops(c) {\r\n  var out = new Buffer(4);\r\n  out.writeUInt32BE(c,0);\r\n  return out;\r\n}"},"lineCount":17}},"hash":"90c8954846cbd96b12d9aa079021566b","cacheData":{"env":{}}}