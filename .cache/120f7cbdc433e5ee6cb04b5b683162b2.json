{"dependencies":[{"name":"C:\\Users\\kea_h\\vrandblog\\package.json","includedInParent":true,"mtime":1521988836233},{"name":"C:\\Users\\kea_h\\vrandblog\\.babelrc","includedInParent":true,"mtime":1521988825970},{"name":"C:\\Users\\kea_h\\vrandblog\\node_modules\\hash.js\\package.json","includedInParent":true,"mtime":1521988830843},{"name":"../utils","loc":{"line":3,"column":20}},{"name":"./512","loc":{"line":5,"column":21}}],"generated":{"js":"'use strict';\r\n\r\nvar utils = require('../utils');\r\n\r\nvar SHA512 = require('./512');\r\n\r\nfunction SHA384() {\r\n  if (!(this instanceof SHA384))\r\n    return new SHA384();\r\n\r\n  SHA512.call(this);\r\n  this.h = [\r\n    0xcbbb9d5d, 0xc1059ed8,\r\n    0x629a292a, 0x367cd507,\r\n    0x9159015a, 0x3070dd17,\r\n    0x152fecd8, 0xf70e5939,\r\n    0x67332667, 0xffc00b31,\r\n    0x8eb44a87, 0x68581511,\r\n    0xdb0c2e0d, 0x64f98fa7,\r\n    0x47b5481d, 0xbefa4fa4 ];\r\n}\r\nutils.inherits(SHA384, SHA512);\r\nmodule.exports = SHA384;\r\n\r\nSHA384.blockSize = 1024;\r\nSHA384.outSize = 384;\r\nSHA384.hmacStrength = 192;\r\nSHA384.padLength = 128;\r\n\r\nSHA384.prototype._digest = function digest(enc) {\r\n  if (enc === 'hex')\r\n    return utils.toHex32(this.h.slice(0, 12), 'big');\r\n  else\r\n    return utils.split32(this.h.slice(0, 12), 'big');\r\n};\r\n","map":{"mappings":[{"source":"node_modules\\hash.js\\lib\\hash\\sha\\384.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules\\hash.js\\lib\\hash\\sha\\384.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules\\hash.js\\lib\\hash\\sha\\384.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules\\hash.js\\lib\\hash\\sha\\384.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules\\hash.js\\lib\\hash\\sha\\384.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules\\hash.js\\lib\\hash\\sha\\384.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules\\hash.js\\lib\\hash\\sha\\384.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules\\hash.js\\lib\\hash\\sha\\384.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules\\hash.js\\lib\\hash\\sha\\384.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules\\hash.js\\lib\\hash\\sha\\384.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules\\hash.js\\lib\\hash\\sha\\384.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules\\hash.js\\lib\\hash\\sha\\384.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules\\hash.js\\lib\\hash\\sha\\384.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules\\hash.js\\lib\\hash\\sha\\384.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules\\hash.js\\lib\\hash\\sha\\384.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules\\hash.js\\lib\\hash\\sha\\384.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules\\hash.js\\lib\\hash\\sha\\384.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules\\hash.js\\lib\\hash\\sha\\384.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules\\hash.js\\lib\\hash\\sha\\384.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules\\hash.js\\lib\\hash\\sha\\384.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules\\hash.js\\lib\\hash\\sha\\384.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules\\hash.js\\lib\\hash\\sha\\384.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules\\hash.js\\lib\\hash\\sha\\384.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules\\hash.js\\lib\\hash\\sha\\384.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules\\hash.js\\lib\\hash\\sha\\384.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules\\hash.js\\lib\\hash\\sha\\384.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules\\hash.js\\lib\\hash\\sha\\384.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules\\hash.js\\lib\\hash\\sha\\384.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules\\hash.js\\lib\\hash\\sha\\384.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules\\hash.js\\lib\\hash\\sha\\384.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules\\hash.js\\lib\\hash\\sha\\384.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules\\hash.js\\lib\\hash\\sha\\384.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules\\hash.js\\lib\\hash\\sha\\384.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules\\hash.js\\lib\\hash\\sha\\384.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules\\hash.js\\lib\\hash\\sha\\384.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules\\hash.js\\lib\\hash\\sha\\384.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}}],"sources":{"node_modules\\hash.js\\lib\\hash\\sha\\384.js":"'use strict';\r\n\r\nvar utils = require('../utils');\r\n\r\nvar SHA512 = require('./512');\r\n\r\nfunction SHA384() {\r\n  if (!(this instanceof SHA384))\r\n    return new SHA384();\r\n\r\n  SHA512.call(this);\r\n  this.h = [\r\n    0xcbbb9d5d, 0xc1059ed8,\r\n    0x629a292a, 0x367cd507,\r\n    0x9159015a, 0x3070dd17,\r\n    0x152fecd8, 0xf70e5939,\r\n    0x67332667, 0xffc00b31,\r\n    0x8eb44a87, 0x68581511,\r\n    0xdb0c2e0d, 0x64f98fa7,\r\n    0x47b5481d, 0xbefa4fa4 ];\r\n}\r\nutils.inherits(SHA384, SHA512);\r\nmodule.exports = SHA384;\r\n\r\nSHA384.blockSize = 1024;\r\nSHA384.outSize = 384;\r\nSHA384.hmacStrength = 192;\r\nSHA384.padLength = 128;\r\n\r\nSHA384.prototype._digest = function digest(enc) {\r\n  if (enc === 'hex')\r\n    return utils.toHex32(this.h.slice(0, 12), 'big');\r\n  else\r\n    return utils.split32(this.h.slice(0, 12), 'big');\r\n};\r\n"},"lineCount":36}},"hash":"defd28c9b1d89a1bd207b35e6a779a15","cacheData":{"env":{}}}