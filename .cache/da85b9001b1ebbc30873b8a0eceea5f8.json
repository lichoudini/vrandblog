{"dependencies":[{"name":"C:\\Users\\kea_h\\vrandblog\\package.json","includedInParent":true,"mtime":1521988836233},{"name":"C:\\Users\\kea_h\\vrandblog\\.babelrc","includedInParent":true,"mtime":1521988825970},{"name":"C:\\Users\\kea_h\\vrandblog\\node_modules\\form-data\\package.json","includedInParent":true,"mtime":1521988830706},{"name":"combined-stream","loc":{"line":1,"column":29}},{"name":"util","loc":{"line":2,"column":19}},{"name":"path","loc":{"line":3,"column":19}},{"name":"http","loc":{"line":4,"column":19}},{"name":"https","loc":{"line":5,"column":20}},{"name":"url","loc":{"line":6,"column":23}},{"name":"fs","loc":{"line":7,"column":17}},{"name":"mime-types","loc":{"line":8,"column":19}},{"name":"async","loc":{"line":9,"column":20}},{"name":"buffer"},{"name":"process"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\nvar process = require(\"process\");\nvar CombinedStream = require('combined-stream');\r\nvar util = require('util');\r\nvar path = require('path');\r\nvar http = require('http');\r\nvar https = require('https');\r\nvar parseUrl = require('url').parse;\r\nvar fs = require('fs');\r\nvar mime = require('mime-types');\r\nvar async = require('async');\r\n\r\nmodule.exports = FormData;\r\nfunction FormData() {\r\n  this._overheadLength = 0;\r\n  this._valueLength = 0;\r\n  this._lengthRetrievers = [];\r\n\r\n  CombinedStream.call(this);\r\n}\r\nutil.inherits(FormData, CombinedStream);\r\n\r\nFormData.LINE_BREAK = '\\r\\n';\r\n\r\nFormData.prototype.append = function(field, value, options) {\r\n  options = options || {};\r\n\r\n  var append = CombinedStream.prototype.append.bind(this);\r\n\r\n  // all that streamy business can't handle numbers\r\n  if (typeof value == 'number') value = ''+value;\r\n\r\n  // https://github.com/felixge/node-form-data/issues/38\r\n  if (util.isArray(value)) {\r\n    // Please convert your array into string\r\n    // the way web server expects it\r\n    this._error(new Error('Arrays are not supported.'));\r\n    return;\r\n  }\r\n\r\n  var header = this._multiPartHeader(field, value, options);\r\n  var footer = this._multiPartFooter(field, value, options);\r\n\r\n  append(header);\r\n  append(value);\r\n  append(footer);\r\n\r\n  // pass along options.knownLength\r\n  this._trackLength(header, value, options);\r\n};\r\n\r\nFormData.prototype._trackLength = function(header, value, options) {\r\n  var valueLength = 0;\r\n\r\n  // used w/ getLengthSync(), when length is known.\r\n  // e.g. for streaming directly from a remote server,\r\n  // w/ a known file a size, and not wanting to wait for\r\n  // incoming file to finish to get its size.\r\n  if (options.knownLength != null) {\r\n    valueLength += +options.knownLength;\r\n  } else if (Buffer.isBuffer(value)) {\r\n    valueLength = value.length;\r\n  } else if (typeof value === 'string') {\r\n    valueLength = Buffer.byteLength(value);\r\n  }\r\n\r\n  this._valueLength += valueLength;\r\n\r\n  // @check why add CRLF? does this account for custom/multiple CRLFs?\r\n  this._overheadLength +=\r\n    Buffer.byteLength(header) +\r\n    + FormData.LINE_BREAK.length;\r\n\r\n  // empty or either doesn't have path or not an http response\r\n  if (!value || ( !value.path && !(value.readable && value.hasOwnProperty('httpVersion')) )) {\r\n    return;\r\n  }\r\n\r\n  // no need to bother with the length\r\n  if (!options.knownLength)\r\n  this._lengthRetrievers.push(function(next) {\r\n\r\n    if (value.hasOwnProperty('fd')) {\r\n\r\n      // take read range into a account\r\n      // `end` = Infinity â€“> read file till the end\r\n      //\r\n      // TODO: Looks like there is bug in Node fs.createReadStream\r\n      // it doesn't respect `end` options without `start` options\r\n      // Fix it when node fixes it.\r\n      // https://github.com/joyent/node/issues/7819\r\n      if (value.end != undefined && value.end != Infinity && value.start != undefined) {\r\n\r\n        // when end specified\r\n        // no need to calculate range\r\n        // inclusive, starts with 0\r\n        next(null, value.end+1 - (value.start ? value.start : 0));\r\n\r\n      // not that fast snoopy\r\n      } else {\r\n        // still need to fetch file size from fs\r\n        fs.stat(value.path, function(err, stat) {\r\n\r\n          var fileSize;\r\n\r\n          if (err) {\r\n            next(err);\r\n            return;\r\n          }\r\n\r\n          // update final size based on the range options\r\n          fileSize = stat.size - (value.start ? value.start : 0);\r\n          next(null, fileSize);\r\n        });\r\n      }\r\n\r\n    // or http response\r\n    } else if (value.hasOwnProperty('httpVersion')) {\r\n      next(null, +value.headers['content-length']);\r\n\r\n    // or request stream http://github.com/mikeal/request\r\n    } else if (value.hasOwnProperty('httpModule')) {\r\n      // wait till response come back\r\n      value.on('response', function(response) {\r\n        value.pause();\r\n        next(null, +response.headers['content-length']);\r\n      });\r\n      value.resume();\r\n\r\n    // something else\r\n    } else {\r\n      next('Unknown stream');\r\n    }\r\n  });\r\n};\r\n\r\nFormData.prototype._multiPartHeader = function(field, value, options) {\r\n  var boundary = this.getBoundary();\r\n  var header = '';\r\n\r\n  // custom header specified (as string)?\r\n  // it becomes responsible for boundary\r\n  // (e.g. to handle extra CRLFs on .NET servers)\r\n  if (options.header != null) {\r\n    header = options.header;\r\n  } else {\r\n    header += '--' + boundary + FormData.LINE_BREAK +\r\n      'Content-Disposition: form-data; name=\"' + field + '\"';\r\n\r\n    // fs- and request- streams have path property\r\n    // or use custom filename and/or contentType\r\n    // TODO: Use request's response mime-type\r\n    if (options.filename || value.path) {\r\n      header +=\r\n        '; filename=\"' + path.basename(options.filename || value.path) + '\"' + FormData.LINE_BREAK +\r\n        'Content-Type: ' +  (options.contentType || mime.lookup(options.filename || value.path));\r\n\r\n    // http response has not\r\n    } else if (value.readable && value.hasOwnProperty('httpVersion')) {\r\n      header +=\r\n        '; filename=\"' + path.basename(value.client._httpMessage.path) + '\"' + FormData.LINE_BREAK +\r\n        'Content-Type: ' + value.headers['content-type'];\r\n    }\r\n\r\n    header += FormData.LINE_BREAK + FormData.LINE_BREAK;\r\n  }\r\n\r\n  return header;\r\n};\r\n\r\nFormData.prototype._multiPartFooter = function(field, value, options) {\r\n  return function(next) {\r\n    var footer = FormData.LINE_BREAK;\r\n\r\n    var lastPart = (this._streams.length === 0);\r\n    if (lastPart) {\r\n      footer += this._lastBoundary();\r\n    }\r\n\r\n    next(footer);\r\n  }.bind(this);\r\n};\r\n\r\nFormData.prototype._lastBoundary = function() {\r\n  return '--' + this.getBoundary() + '--';\r\n};\r\n\r\nFormData.prototype.getHeaders = function(userHeaders) {\r\n  var formHeaders = {\r\n    'content-type': 'multipart/form-data; boundary=' + this.getBoundary()\r\n  };\r\n\r\n  for (var header in userHeaders) {\r\n    formHeaders[header.toLowerCase()] = userHeaders[header];\r\n  }\r\n\r\n  return formHeaders;\r\n}\r\n\r\nFormData.prototype.getCustomHeaders = function(contentType) {\r\n    contentType = contentType ? contentType : 'multipart/form-data';\r\n\r\n    var formHeaders = {\r\n        'content-type': contentType + '; boundary=' + this.getBoundary(),\r\n        'content-length': this.getLengthSync()\r\n    };\r\n\r\n    return formHeaders;\r\n}\r\n\r\nFormData.prototype.getBoundary = function() {\r\n  if (!this._boundary) {\r\n    this._generateBoundary();\r\n  }\r\n\r\n  return this._boundary;\r\n};\r\n\r\nFormData.prototype._generateBoundary = function() {\r\n  // This generates a 50 character boundary similar to those used by Firefox.\r\n  // They are optimized for boyer-moore parsing.\r\n  var boundary = '--------------------------';\r\n  for (var i = 0; i < 24; i++) {\r\n    boundary += Math.floor(Math.random() * 10).toString(16);\r\n  }\r\n\r\n  this._boundary = boundary;\r\n};\r\n\r\n// Note: getLengthSync DOESN'T calculate streams length\r\n// As workaround one can calculate file size manually\r\n// and add it as knownLength option\r\nFormData.prototype.getLengthSync = function(debug) {\r\n  var knownLength = this._overheadLength + this._valueLength;\r\n\r\n  // Don't get confused, there are 3 \"internal\" streams for each keyval pair\r\n  // so it basically checks if there is any value added to the form\r\n  if (this._streams.length) {\r\n    knownLength += this._lastBoundary().length;\r\n  }\r\n\r\n  // https://github.com/felixge/node-form-data/issues/40\r\n  if (this._lengthRetrievers.length) {\r\n    // Some async length retrivers are present\r\n    // therefore synchronous length calculation is false.\r\n    // Please use getLength(callback) to get proper length\r\n    this._error(new Error('Cannot calculate proper length in synchronous way.'));\r\n  }\r\n\r\n  return knownLength;\r\n};\r\n\r\nFormData.prototype.getLength = function(cb) {\r\n  var knownLength = this._overheadLength + this._valueLength;\r\n\r\n  if (this._streams.length) {\r\n    knownLength += this._lastBoundary().length;\r\n  }\r\n\r\n  if (!this._lengthRetrievers.length) {\r\n    process.nextTick(cb.bind(this, null, knownLength));\r\n    return;\r\n  }\r\n\r\n  async.parallel(this._lengthRetrievers, function(err, values) {\r\n    if (err) {\r\n      cb(err);\r\n      return;\r\n    }\r\n\r\n    values.forEach(function(length) {\r\n      knownLength += length;\r\n    });\r\n\r\n    cb(null, knownLength);\r\n  });\r\n};\r\n\r\nFormData.prototype.submit = function(params, cb) {\r\n\r\n  var request\r\n    , options\r\n    , defaults = {\r\n        method : 'post'\r\n    };\r\n\r\n  // parse provided url if it's string\r\n  // or treat it as options object\r\n  if (typeof params == 'string') {\r\n    params = parseUrl(params);\r\n\r\n    options = populate({\r\n      port: params.port,\r\n      path: params.pathname,\r\n      host: params.hostname\r\n    }, defaults);\r\n  }\r\n  else // use custom params\r\n  {\r\n    options = populate(params, defaults);\r\n    // if no port provided use default one\r\n    if (!options.port) {\r\n      options.port = options.protocol == 'https:' ? 443 : 80;\r\n    }\r\n  }\r\n\r\n  // put that good code in getHeaders to some use\r\n  options.headers = this.getHeaders(params.headers);\r\n\r\n  // https if specified, fallback to http in any other case\r\n  if (params.protocol == 'https:') {\r\n    request = https.request(options);\r\n  } else {\r\n    request = http.request(options);\r\n  }\r\n\r\n  // get content length and fire away\r\n  this.getLength(function(err, length) {\r\n\r\n    // TODO: Add chunked encoding when no length (if err)\r\n\r\n    // add content length\r\n    request.setHeader('Content-Length', length);\r\n\r\n    this.pipe(request);\r\n    if (cb) {\r\n      request.on('error', cb);\r\n      request.on('response', cb.bind(this, null));\r\n    }\r\n  }.bind(this));\r\n\r\n  return request;\r\n};\r\n\r\nFormData.prototype._error = function(err) {\r\n  if (this.error) return;\r\n\r\n  this.error = err;\r\n  this.pause();\r\n  this.emit('error', err);\r\n};\r\n\r\n/*\r\n * Santa's little helpers\r\n */\r\n\r\n// populates missing values\r\nfunction populate(dst, src) {\r\n  for (var prop in src) {\r\n    if (!dst[prop]) dst[prop] = src[prop];\r\n  }\r\n  return dst;\r\n}\r\n","map":{"mappings":[{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":1,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":2,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":3,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":4,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":5,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":6,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":7,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":8,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":9,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":10,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":11,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":12,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":13,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":14,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":15,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":16,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":17,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":18,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":19,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":20,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":21,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":22,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":23,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":24,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":25,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":26,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":27,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":28,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":29,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":30,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":31,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":32,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":33,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":34,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":35,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":36,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":37,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":38,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":39,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":40,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":41,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":42,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":43,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":44,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":45,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":46,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":47,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":48,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":49,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":50,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":51,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":52,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":53,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":54,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":55,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":56,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":57,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":58,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":59,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":60,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":61,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":62,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":63,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":64,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":65,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":66,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":67,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":68,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":69,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":70,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":71,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":72,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":73,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":74,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":75,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":76,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":77,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":78,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":79,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":80,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":81,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":82,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":83,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":84,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":85,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":86,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":87,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":88,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":89,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":90,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":91,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":92,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":93,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":94,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":95,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":96,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":97,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":98,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":99,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":100,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":101,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":102,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":103,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":104,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":105,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":106,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":107,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":108,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":109,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":110,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":111,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":112,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":113,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":114,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":115,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":116,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":117,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":118,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":119,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":120,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":121,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":122,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":123,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":124,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":125,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":126,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":127,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":128,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":129,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":130,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":131,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":132,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":133,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":134,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":135,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":136,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":137,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":138,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":139,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":140,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":141,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":142,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":143,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":144,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":145,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":146,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":147,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":148,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":149,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":150,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":151,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":152,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":153,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":154,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":155,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":156,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":157,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":158,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":159,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":160,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":161,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":162,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":163,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":164,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":165,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":166,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":167,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":168,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":169,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":170,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":171,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":172,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":173,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":174,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":175,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":176,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":177,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":178,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":179,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":180,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":181,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":182,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":183,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":184,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":185,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":186,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":187,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":188,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":189,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":190,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":191,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":192,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":193,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":194,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":195,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":196,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":197,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":198,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":199,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":200,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":201,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":202,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":203,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":204,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":205,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":206,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":207,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":208,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":209,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":210,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":211,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":212,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":213,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":214,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":215,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":216,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":217,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":218,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":219,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":220,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":221,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":222,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":223,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":224,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":225,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":226,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":227,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":228,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":229,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":230,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":231,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":232,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":233,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":234,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":235,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":236,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":237,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":238,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":239,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":240,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":241,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":242,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":243,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":244,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":245,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":246,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":247,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":248,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":249,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":250,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":251,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":252,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":253,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":254,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":255,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":256,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":257,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":258,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":259,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":260,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":261,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":262,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":263,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":264,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":265,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":266,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":267,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":268,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":269,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":270,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":271,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":272,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":273,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":274,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":275,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":276,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":277,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":278,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":279,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":280,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":281,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":282,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":283,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":284,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":285,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":286,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":287,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":288,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":289,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":290,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":291,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":292,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":293,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":294,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":295,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":296,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":297,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":298,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":299,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":300,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":301,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":302,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":303,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":304,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":305,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":306,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":307,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":308,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":309,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":310,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":311,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":312,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":313,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":314,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":315,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":316,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":317,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":318,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":319,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":320,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":321,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":322,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":323,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":324,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":325,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":326,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":327,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":328,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":329,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":330,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":331,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":332,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":333,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":334,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":335,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":336,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":337,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":338,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":339,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":340,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":341,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":342,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":343,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":344,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":345,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":346,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":347,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":348,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":349,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":350,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":351,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules\\form-data\\lib\\form_data.js","original":{"line":352,"column":0},"generated":{"line":354,"column":0}}],"sources":{"node_modules\\form-data\\lib\\form_data.js":"var CombinedStream = require('combined-stream');\r\nvar util = require('util');\r\nvar path = require('path');\r\nvar http = require('http');\r\nvar https = require('https');\r\nvar parseUrl = require('url').parse;\r\nvar fs = require('fs');\r\nvar mime = require('mime-types');\r\nvar async = require('async');\r\n\r\nmodule.exports = FormData;\r\nfunction FormData() {\r\n  this._overheadLength = 0;\r\n  this._valueLength = 0;\r\n  this._lengthRetrievers = [];\r\n\r\n  CombinedStream.call(this);\r\n}\r\nutil.inherits(FormData, CombinedStream);\r\n\r\nFormData.LINE_BREAK = '\\r\\n';\r\n\r\nFormData.prototype.append = function(field, value, options) {\r\n  options = options || {};\r\n\r\n  var append = CombinedStream.prototype.append.bind(this);\r\n\r\n  // all that streamy business can't handle numbers\r\n  if (typeof value == 'number') value = ''+value;\r\n\r\n  // https://github.com/felixge/node-form-data/issues/38\r\n  if (util.isArray(value)) {\r\n    // Please convert your array into string\r\n    // the way web server expects it\r\n    this._error(new Error('Arrays are not supported.'));\r\n    return;\r\n  }\r\n\r\n  var header = this._multiPartHeader(field, value, options);\r\n  var footer = this._multiPartFooter(field, value, options);\r\n\r\n  append(header);\r\n  append(value);\r\n  append(footer);\r\n\r\n  // pass along options.knownLength\r\n  this._trackLength(header, value, options);\r\n};\r\n\r\nFormData.prototype._trackLength = function(header, value, options) {\r\n  var valueLength = 0;\r\n\r\n  // used w/ getLengthSync(), when length is known.\r\n  // e.g. for streaming directly from a remote server,\r\n  // w/ a known file a size, and not wanting to wait for\r\n  // incoming file to finish to get its size.\r\n  if (options.knownLength != null) {\r\n    valueLength += +options.knownLength;\r\n  } else if (Buffer.isBuffer(value)) {\r\n    valueLength = value.length;\r\n  } else if (typeof value === 'string') {\r\n    valueLength = Buffer.byteLength(value);\r\n  }\r\n\r\n  this._valueLength += valueLength;\r\n\r\n  // @check why add CRLF? does this account for custom/multiple CRLFs?\r\n  this._overheadLength +=\r\n    Buffer.byteLength(header) +\r\n    + FormData.LINE_BREAK.length;\r\n\r\n  // empty or either doesn't have path or not an http response\r\n  if (!value || ( !value.path && !(value.readable && value.hasOwnProperty('httpVersion')) )) {\r\n    return;\r\n  }\r\n\r\n  // no need to bother with the length\r\n  if (!options.knownLength)\r\n  this._lengthRetrievers.push(function(next) {\r\n\r\n    if (value.hasOwnProperty('fd')) {\r\n\r\n      // take read range into a account\r\n      // `end` = Infinity â€“> read file till the end\r\n      //\r\n      // TODO: Looks like there is bug in Node fs.createReadStream\r\n      // it doesn't respect `end` options without `start` options\r\n      // Fix it when node fixes it.\r\n      // https://github.com/joyent/node/issues/7819\r\n      if (value.end != undefined && value.end != Infinity && value.start != undefined) {\r\n\r\n        // when end specified\r\n        // no need to calculate range\r\n        // inclusive, starts with 0\r\n        next(null, value.end+1 - (value.start ? value.start : 0));\r\n\r\n      // not that fast snoopy\r\n      } else {\r\n        // still need to fetch file size from fs\r\n        fs.stat(value.path, function(err, stat) {\r\n\r\n          var fileSize;\r\n\r\n          if (err) {\r\n            next(err);\r\n            return;\r\n          }\r\n\r\n          // update final size based on the range options\r\n          fileSize = stat.size - (value.start ? value.start : 0);\r\n          next(null, fileSize);\r\n        });\r\n      }\r\n\r\n    // or http response\r\n    } else if (value.hasOwnProperty('httpVersion')) {\r\n      next(null, +value.headers['content-length']);\r\n\r\n    // or request stream http://github.com/mikeal/request\r\n    } else if (value.hasOwnProperty('httpModule')) {\r\n      // wait till response come back\r\n      value.on('response', function(response) {\r\n        value.pause();\r\n        next(null, +response.headers['content-length']);\r\n      });\r\n      value.resume();\r\n\r\n    // something else\r\n    } else {\r\n      next('Unknown stream');\r\n    }\r\n  });\r\n};\r\n\r\nFormData.prototype._multiPartHeader = function(field, value, options) {\r\n  var boundary = this.getBoundary();\r\n  var header = '';\r\n\r\n  // custom header specified (as string)?\r\n  // it becomes responsible for boundary\r\n  // (e.g. to handle extra CRLFs on .NET servers)\r\n  if (options.header != null) {\r\n    header = options.header;\r\n  } else {\r\n    header += '--' + boundary + FormData.LINE_BREAK +\r\n      'Content-Disposition: form-data; name=\"' + field + '\"';\r\n\r\n    // fs- and request- streams have path property\r\n    // or use custom filename and/or contentType\r\n    // TODO: Use request's response mime-type\r\n    if (options.filename || value.path) {\r\n      header +=\r\n        '; filename=\"' + path.basename(options.filename || value.path) + '\"' + FormData.LINE_BREAK +\r\n        'Content-Type: ' +  (options.contentType || mime.lookup(options.filename || value.path));\r\n\r\n    // http response has not\r\n    } else if (value.readable && value.hasOwnProperty('httpVersion')) {\r\n      header +=\r\n        '; filename=\"' + path.basename(value.client._httpMessage.path) + '\"' + FormData.LINE_BREAK +\r\n        'Content-Type: ' + value.headers['content-type'];\r\n    }\r\n\r\n    header += FormData.LINE_BREAK + FormData.LINE_BREAK;\r\n  }\r\n\r\n  return header;\r\n};\r\n\r\nFormData.prototype._multiPartFooter = function(field, value, options) {\r\n  return function(next) {\r\n    var footer = FormData.LINE_BREAK;\r\n\r\n    var lastPart = (this._streams.length === 0);\r\n    if (lastPart) {\r\n      footer += this._lastBoundary();\r\n    }\r\n\r\n    next(footer);\r\n  }.bind(this);\r\n};\r\n\r\nFormData.prototype._lastBoundary = function() {\r\n  return '--' + this.getBoundary() + '--';\r\n};\r\n\r\nFormData.prototype.getHeaders = function(userHeaders) {\r\n  var formHeaders = {\r\n    'content-type': 'multipart/form-data; boundary=' + this.getBoundary()\r\n  };\r\n\r\n  for (var header in userHeaders) {\r\n    formHeaders[header.toLowerCase()] = userHeaders[header];\r\n  }\r\n\r\n  return formHeaders;\r\n}\r\n\r\nFormData.prototype.getCustomHeaders = function(contentType) {\r\n    contentType = contentType ? contentType : 'multipart/form-data';\r\n\r\n    var formHeaders = {\r\n        'content-type': contentType + '; boundary=' + this.getBoundary(),\r\n        'content-length': this.getLengthSync()\r\n    };\r\n\r\n    return formHeaders;\r\n}\r\n\r\nFormData.prototype.getBoundary = function() {\r\n  if (!this._boundary) {\r\n    this._generateBoundary();\r\n  }\r\n\r\n  return this._boundary;\r\n};\r\n\r\nFormData.prototype._generateBoundary = function() {\r\n  // This generates a 50 character boundary similar to those used by Firefox.\r\n  // They are optimized for boyer-moore parsing.\r\n  var boundary = '--------------------------';\r\n  for (var i = 0; i < 24; i++) {\r\n    boundary += Math.floor(Math.random() * 10).toString(16);\r\n  }\r\n\r\n  this._boundary = boundary;\r\n};\r\n\r\n// Note: getLengthSync DOESN'T calculate streams length\r\n// As workaround one can calculate file size manually\r\n// and add it as knownLength option\r\nFormData.prototype.getLengthSync = function(debug) {\r\n  var knownLength = this._overheadLength + this._valueLength;\r\n\r\n  // Don't get confused, there are 3 \"internal\" streams for each keyval pair\r\n  // so it basically checks if there is any value added to the form\r\n  if (this._streams.length) {\r\n    knownLength += this._lastBoundary().length;\r\n  }\r\n\r\n  // https://github.com/felixge/node-form-data/issues/40\r\n  if (this._lengthRetrievers.length) {\r\n    // Some async length retrivers are present\r\n    // therefore synchronous length calculation is false.\r\n    // Please use getLength(callback) to get proper length\r\n    this._error(new Error('Cannot calculate proper length in synchronous way.'));\r\n  }\r\n\r\n  return knownLength;\r\n};\r\n\r\nFormData.prototype.getLength = function(cb) {\r\n  var knownLength = this._overheadLength + this._valueLength;\r\n\r\n  if (this._streams.length) {\r\n    knownLength += this._lastBoundary().length;\r\n  }\r\n\r\n  if (!this._lengthRetrievers.length) {\r\n    process.nextTick(cb.bind(this, null, knownLength));\r\n    return;\r\n  }\r\n\r\n  async.parallel(this._lengthRetrievers, function(err, values) {\r\n    if (err) {\r\n      cb(err);\r\n      return;\r\n    }\r\n\r\n    values.forEach(function(length) {\r\n      knownLength += length;\r\n    });\r\n\r\n    cb(null, knownLength);\r\n  });\r\n};\r\n\r\nFormData.prototype.submit = function(params, cb) {\r\n\r\n  var request\r\n    , options\r\n    , defaults = {\r\n        method : 'post'\r\n    };\r\n\r\n  // parse provided url if it's string\r\n  // or treat it as options object\r\n  if (typeof params == 'string') {\r\n    params = parseUrl(params);\r\n\r\n    options = populate({\r\n      port: params.port,\r\n      path: params.pathname,\r\n      host: params.hostname\r\n    }, defaults);\r\n  }\r\n  else // use custom params\r\n  {\r\n    options = populate(params, defaults);\r\n    // if no port provided use default one\r\n    if (!options.port) {\r\n      options.port = options.protocol == 'https:' ? 443 : 80;\r\n    }\r\n  }\r\n\r\n  // put that good code in getHeaders to some use\r\n  options.headers = this.getHeaders(params.headers);\r\n\r\n  // https if specified, fallback to http in any other case\r\n  if (params.protocol == 'https:') {\r\n    request = https.request(options);\r\n  } else {\r\n    request = http.request(options);\r\n  }\r\n\r\n  // get content length and fire away\r\n  this.getLength(function(err, length) {\r\n\r\n    // TODO: Add chunked encoding when no length (if err)\r\n\r\n    // add content length\r\n    request.setHeader('Content-Length', length);\r\n\r\n    this.pipe(request);\r\n    if (cb) {\r\n      request.on('error', cb);\r\n      request.on('response', cb.bind(this, null));\r\n    }\r\n  }.bind(this));\r\n\r\n  return request;\r\n};\r\n\r\nFormData.prototype._error = function(err) {\r\n  if (this.error) return;\r\n\r\n  this.error = err;\r\n  this.pause();\r\n  this.emit('error', err);\r\n};\r\n\r\n/*\r\n * Santa's little helpers\r\n */\r\n\r\n// populates missing values\r\nfunction populate(dst, src) {\r\n  for (var prop in src) {\r\n    if (!dst[prop]) dst[prop] = src[prop];\r\n  }\r\n  return dst;\r\n}\r\n"},"lineCount":354}},"hash":"aea2801d6d092ee88b34f5ea5b799e57","cacheData":{"env":{}}}