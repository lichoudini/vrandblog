{"dependencies":[{"name":"C:\\Users\\kea_h\\vrandblog\\package.json","includedInParent":true,"mtime":1521988836233},{"name":"C:\\Users\\kea_h\\vrandblog\\.babelrc","includedInParent":true,"mtime":1521988825970},{"name":"C:\\Users\\kea_h\\vrandblog\\node_modules\\lodash\\package.json","includedInParent":true,"mtime":1521988832115},{"name":"./isArray","loc":{"line":1,"column":22}},{"name":"./_isKey","loc":{"line":2,"column":20}},{"name":"./_stringToPath","loc":{"line":3,"column":27}},{"name":"./toString","loc":{"line":4,"column":23}}],"generated":{"js":"var isArray = require('./isArray'),\r\n    isKey = require('./_isKey'),\r\n    stringToPath = require('./_stringToPath'),\r\n    toString = require('./toString');\r\n\r\n/**\r\n * Casts `value` to a path array if it's not one.\r\n *\r\n * @private\r\n * @param {*} value The value to inspect.\r\n * @param {Object} [object] The object to query keys on.\r\n * @returns {Array} Returns the cast property path array.\r\n */\r\nfunction castPath(value, object) {\r\n  if (isArray(value)) {\r\n    return value;\r\n  }\r\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\r\n}\r\n\r\nmodule.exports = castPath;\r\n","map":{"mappings":[{"source":"node_modules\\lodash\\_castPath.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules\\lodash\\_castPath.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules\\lodash\\_castPath.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules\\lodash\\_castPath.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules\\lodash\\_castPath.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules\\lodash\\_castPath.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules\\lodash\\_castPath.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules\\lodash\\_castPath.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules\\lodash\\_castPath.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules\\lodash\\_castPath.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules\\lodash\\_castPath.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules\\lodash\\_castPath.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules\\lodash\\_castPath.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules\\lodash\\_castPath.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules\\lodash\\_castPath.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules\\lodash\\_castPath.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules\\lodash\\_castPath.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules\\lodash\\_castPath.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules\\lodash\\_castPath.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules\\lodash\\_castPath.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules\\lodash\\_castPath.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules\\lodash\\_castPath.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}}],"sources":{"node_modules\\lodash\\_castPath.js":"var isArray = require('./isArray'),\r\n    isKey = require('./_isKey'),\r\n    stringToPath = require('./_stringToPath'),\r\n    toString = require('./toString');\r\n\r\n/**\r\n * Casts `value` to a path array if it's not one.\r\n *\r\n * @private\r\n * @param {*} value The value to inspect.\r\n * @param {Object} [object] The object to query keys on.\r\n * @returns {Array} Returns the cast property path array.\r\n */\r\nfunction castPath(value, object) {\r\n  if (isArray(value)) {\r\n    return value;\r\n  }\r\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\r\n}\r\n\r\nmodule.exports = castPath;\r\n"},"lineCount":22}},"hash":"963549d214a888db71bdc028c4a610e4","cacheData":{"env":{}}}