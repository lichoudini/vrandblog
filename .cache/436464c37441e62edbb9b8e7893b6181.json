{"dependencies":[{"name":"C:\\Users\\kea_h\\vrandblog\\package.json","includedInParent":true,"mtime":1521988836233},{"name":"C:\\Users\\kea_h\\vrandblog\\.babelrc","includedInParent":true,"mtime":1521988825970},{"name":"C:\\Users\\kea_h\\vrandblog\\node_modules\\browserify-des\\package.json","includedInParent":true,"mtime":1521988828088},{"name":"cipher-base","loc":{"line":1,"column":25}},{"name":"des.js","loc":{"line":2,"column":18}},{"name":"inherits","loc":{"line":3,"column":23}},{"name":"buffer"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\nvar CipherBase = require('cipher-base')\r\nvar des = require('des.js')\r\nvar inherits = require('inherits')\r\n\r\nvar modes = {\r\n  'des-ede3-cbc': des.CBC.instantiate(des.EDE),\r\n  'des-ede3': des.EDE,\r\n  'des-ede-cbc': des.CBC.instantiate(des.EDE),\r\n  'des-ede': des.EDE,\r\n  'des-cbc': des.CBC.instantiate(des.DES),\r\n  'des-ecb': des.DES\r\n}\r\nmodes.des = modes['des-cbc']\r\nmodes.des3 = modes['des-ede3-cbc']\r\nmodule.exports = DES\r\ninherits(DES, CipherBase)\r\nfunction DES (opts) {\r\n  CipherBase.call(this)\r\n  var modeName = opts.mode.toLowerCase()\r\n  var mode = modes[modeName]\r\n  var type\r\n  if (opts.decrypt) {\r\n    type = 'decrypt'\r\n  } else {\r\n    type = 'encrypt'\r\n  }\r\n  var key = opts.key\r\n  if (modeName === 'des-ede' || modeName === 'des-ede-cbc') {\r\n    key = Buffer.concat([key, key.slice(0, 8)])\r\n  }\r\n  var iv = opts.iv\r\n  this._des = mode.create({\r\n    key: key,\r\n    iv: iv,\r\n    type: type\r\n  })\r\n}\r\nDES.prototype._update = function (data) {\r\n  return new Buffer(this._des.update(data))\r\n}\r\nDES.prototype._final = function () {\r\n  return new Buffer(this._des.final())\r\n}\r\n","map":{"mappings":[{"source":"node_modules\\browserify-des\\index.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules\\browserify-des\\index.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules\\browserify-des\\index.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules\\browserify-des\\index.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules\\browserify-des\\index.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules\\browserify-des\\index.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules\\browserify-des\\index.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules\\browserify-des\\index.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules\\browserify-des\\index.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules\\browserify-des\\index.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules\\browserify-des\\index.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules\\browserify-des\\index.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules\\browserify-des\\index.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules\\browserify-des\\index.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules\\browserify-des\\index.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules\\browserify-des\\index.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules\\browserify-des\\index.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules\\browserify-des\\index.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules\\browserify-des\\index.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules\\browserify-des\\index.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules\\browserify-des\\index.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules\\browserify-des\\index.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules\\browserify-des\\index.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules\\browserify-des\\index.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules\\browserify-des\\index.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules\\browserify-des\\index.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules\\browserify-des\\index.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules\\browserify-des\\index.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules\\browserify-des\\index.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules\\browserify-des\\index.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules\\browserify-des\\index.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules\\browserify-des\\index.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules\\browserify-des\\index.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules\\browserify-des\\index.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules\\browserify-des\\index.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules\\browserify-des\\index.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules\\browserify-des\\index.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules\\browserify-des\\index.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules\\browserify-des\\index.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules\\browserify-des\\index.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules\\browserify-des\\index.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules\\browserify-des\\index.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules\\browserify-des\\index.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules\\browserify-des\\index.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}}],"sources":{"node_modules\\browserify-des\\index.js":"var CipherBase = require('cipher-base')\r\nvar des = require('des.js')\r\nvar inherits = require('inherits')\r\n\r\nvar modes = {\r\n  'des-ede3-cbc': des.CBC.instantiate(des.EDE),\r\n  'des-ede3': des.EDE,\r\n  'des-ede-cbc': des.CBC.instantiate(des.EDE),\r\n  'des-ede': des.EDE,\r\n  'des-cbc': des.CBC.instantiate(des.DES),\r\n  'des-ecb': des.DES\r\n}\r\nmodes.des = modes['des-cbc']\r\nmodes.des3 = modes['des-ede3-cbc']\r\nmodule.exports = DES\r\ninherits(DES, CipherBase)\r\nfunction DES (opts) {\r\n  CipherBase.call(this)\r\n  var modeName = opts.mode.toLowerCase()\r\n  var mode = modes[modeName]\r\n  var type\r\n  if (opts.decrypt) {\r\n    type = 'decrypt'\r\n  } else {\r\n    type = 'encrypt'\r\n  }\r\n  var key = opts.key\r\n  if (modeName === 'des-ede' || modeName === 'des-ede-cbc') {\r\n    key = Buffer.concat([key, key.slice(0, 8)])\r\n  }\r\n  var iv = opts.iv\r\n  this._des = mode.create({\r\n    key: key,\r\n    iv: iv,\r\n    type: type\r\n  })\r\n}\r\nDES.prototype._update = function (data) {\r\n  return new Buffer(this._des.update(data))\r\n}\r\nDES.prototype._final = function () {\r\n  return new Buffer(this._des.final())\r\n}\r\n"},"lineCount":45}},"hash":"c485bb6ee5660060e22f437d5b1e2a4f","cacheData":{"env":{}}}