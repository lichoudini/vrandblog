{"dependencies":[{"name":"C:\\Users\\kea_h\\vrandblog\\package.json","includedInParent":true,"mtime":1521485357193},{"name":"C:\\Users\\kea_h\\vrandblog\\.babelrc","includedInParent":true,"mtime":1521251480440},{"name":"C:\\Users\\kea_h\\vrandblog\\node_modules\\sshpk\\package.json","includedInParent":true,"mtime":1521485356168},{"name":"./x509","loc":{"line":3,"column":19}},{"name":"assert-plus","loc":{"line":12,"column":21}},{"name":"asn1","loc":{"line":13,"column":19}},{"name":"../algs","loc":{"line":14,"column":19}},{"name":"../utils","loc":{"line":15,"column":20}},{"name":"../key","loc":{"line":16,"column":18}},{"name":"../private-key","loc":{"line":17,"column":25}},{"name":"./pem","loc":{"line":18,"column":18}},{"name":"../identity","loc":{"line":19,"column":23}},{"name":"../signature","loc":{"line":20,"column":24}},{"name":"../certificate","loc":{"line":21,"column":26}},{"name":"buffer"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\n// Copyright 2016 Joyent, Inc.\n\nvar x509 = require('./x509');\n\nmodule.exports = {\n\tread: read,\n\tverify: x509.verify,\n\tsign: x509.sign,\n\twrite: write\n};\n\nvar assert = require('assert-plus');\nvar asn1 = require('asn1');\nvar algs = require('../algs');\nvar utils = require('../utils');\nvar Key = require('../key');\nvar PrivateKey = require('../private-key');\nvar pem = require('./pem');\nvar Identity = require('../identity');\nvar Signature = require('../signature');\nvar Certificate = require('../certificate');\n\nfunction read(buf, options) {\n\tif (typeof (buf) !== 'string') {\n\t\tassert.buffer(buf, 'buf');\n\t\tbuf = buf.toString('ascii');\n\t}\n\n\tvar lines = buf.trim().split(/[\\r\\n]+/g);\n\n\tvar m = lines[0].match(/*JSSTYLED*/\n\t    /[-]+[ ]*BEGIN CERTIFICATE[ ]*[-]+/);\n\tassert.ok(m, 'invalid PEM header');\n\n\tvar m2 = lines[lines.length - 1].match(/*JSSTYLED*/\n\t    /[-]+[ ]*END CERTIFICATE[ ]*[-]+/);\n\tassert.ok(m2, 'invalid PEM footer');\n\n\tvar headers = {};\n\twhile (true) {\n\t\tlines = lines.slice(1);\n\t\tm = lines[0].match(/*JSSTYLED*/\n\t\t    /^([A-Za-z0-9-]+): (.+)$/);\n\t\tif (!m)\n\t\t\tbreak;\n\t\theaders[m[1].toLowerCase()] = m[2];\n\t}\n\n\t/* Chop off the first and last lines */\n\tlines = lines.slice(0, -1).join('');\n\tbuf = new Buffer(lines, 'base64');\n\n\treturn (x509.read(buf, options));\n}\n\nfunction write(cert, options) {\n\tvar dbuf = x509.write(cert, options);\n\n\tvar header = 'CERTIFICATE';\n\tvar tmp = dbuf.toString('base64');\n\tvar len = tmp.length + (tmp.length / 64) +\n\t    18 + 16 + header.length*2 + 10;\n\tvar buf = new Buffer(len);\n\tvar o = 0;\n\to += buf.write('-----BEGIN ' + header + '-----\\n', o);\n\tfor (var i = 0; i < tmp.length; ) {\n\t\tvar limit = i + 64;\n\t\tif (limit > tmp.length)\n\t\t\tlimit = tmp.length;\n\t\to += buf.write(tmp.slice(i, limit), o);\n\t\tbuf[o++] = 10;\n\t\ti = limit;\n\t}\n\to += buf.write('-----END ' + header + '-----\\n', o);\n\n\treturn (buf.slice(0, o));\n}\n","map":{"mappings":[{"source":"node_modules\\sshpk\\lib\\formats\\x509-pem.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\x509-pem.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\x509-pem.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\x509-pem.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\x509-pem.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\x509-pem.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\x509-pem.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\x509-pem.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\x509-pem.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\x509-pem.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\x509-pem.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\x509-pem.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\x509-pem.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\x509-pem.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\x509-pem.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\x509-pem.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\x509-pem.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\x509-pem.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\x509-pem.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\x509-pem.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\x509-pem.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\x509-pem.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\x509-pem.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\x509-pem.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\x509-pem.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\x509-pem.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\x509-pem.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\x509-pem.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\x509-pem.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\x509-pem.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\x509-pem.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\x509-pem.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\x509-pem.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\x509-pem.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\x509-pem.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\x509-pem.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\x509-pem.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\x509-pem.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\x509-pem.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\x509-pem.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\x509-pem.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\x509-pem.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\x509-pem.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\x509-pem.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\x509-pem.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\x509-pem.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\x509-pem.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\x509-pem.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\x509-pem.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\x509-pem.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\x509-pem.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\x509-pem.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\x509-pem.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\x509-pem.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\x509-pem.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\x509-pem.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\x509-pem.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\x509-pem.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\x509-pem.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\x509-pem.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\x509-pem.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\x509-pem.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\x509-pem.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\x509-pem.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\x509-pem.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\x509-pem.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\x509-pem.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\x509-pem.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\x509-pem.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\x509-pem.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\x509-pem.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\x509-pem.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\x509-pem.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\x509-pem.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\x509-pem.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\x509-pem.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\x509-pem.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules\\sshpk\\lib\\formats\\x509-pem.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}}],"sources":{"node_modules\\sshpk\\lib\\formats\\x509-pem.js":"// Copyright 2016 Joyent, Inc.\n\nvar x509 = require('./x509');\n\nmodule.exports = {\n\tread: read,\n\tverify: x509.verify,\n\tsign: x509.sign,\n\twrite: write\n};\n\nvar assert = require('assert-plus');\nvar asn1 = require('asn1');\nvar algs = require('../algs');\nvar utils = require('../utils');\nvar Key = require('../key');\nvar PrivateKey = require('../private-key');\nvar pem = require('./pem');\nvar Identity = require('../identity');\nvar Signature = require('../signature');\nvar Certificate = require('../certificate');\n\nfunction read(buf, options) {\n\tif (typeof (buf) !== 'string') {\n\t\tassert.buffer(buf, 'buf');\n\t\tbuf = buf.toString('ascii');\n\t}\n\n\tvar lines = buf.trim().split(/[\\r\\n]+/g);\n\n\tvar m = lines[0].match(/*JSSTYLED*/\n\t    /[-]+[ ]*BEGIN CERTIFICATE[ ]*[-]+/);\n\tassert.ok(m, 'invalid PEM header');\n\n\tvar m2 = lines[lines.length - 1].match(/*JSSTYLED*/\n\t    /[-]+[ ]*END CERTIFICATE[ ]*[-]+/);\n\tassert.ok(m2, 'invalid PEM footer');\n\n\tvar headers = {};\n\twhile (true) {\n\t\tlines = lines.slice(1);\n\t\tm = lines[0].match(/*JSSTYLED*/\n\t\t    /^([A-Za-z0-9-]+): (.+)$/);\n\t\tif (!m)\n\t\t\tbreak;\n\t\theaders[m[1].toLowerCase()] = m[2];\n\t}\n\n\t/* Chop off the first and last lines */\n\tlines = lines.slice(0, -1).join('');\n\tbuf = new Buffer(lines, 'base64');\n\n\treturn (x509.read(buf, options));\n}\n\nfunction write(cert, options) {\n\tvar dbuf = x509.write(cert, options);\n\n\tvar header = 'CERTIFICATE';\n\tvar tmp = dbuf.toString('base64');\n\tvar len = tmp.length + (tmp.length / 64) +\n\t    18 + 16 + header.length*2 + 10;\n\tvar buf = new Buffer(len);\n\tvar o = 0;\n\to += buf.write('-----BEGIN ' + header + '-----\\n', o);\n\tfor (var i = 0; i < tmp.length; ) {\n\t\tvar limit = i + 64;\n\t\tif (limit > tmp.length)\n\t\t\tlimit = tmp.length;\n\t\to += buf.write(tmp.slice(i, limit), o);\n\t\tbuf[o++] = 10;\n\t\ti = limit;\n\t}\n\to += buf.write('-----END ' + header + '-----\\n', o);\n\n\treturn (buf.slice(0, o));\n}\n"},"lineCount":79}},"hash":"12989722a12a563cbfc8391a0e5d46c2","cacheData":{"env":{}}}