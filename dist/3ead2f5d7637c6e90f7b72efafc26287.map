{"version":3,"sources":["node_modules\\parcel-bundler\\src\\builtins\\bundle-url.js","node_modules\\parcel-bundler\\src\\builtins\\css-loader.js"],"names":["bundleURL","getBundleURLCached","getBundleURL","Error","err","matches","stack","match","getBaseURL","url","replace","exports","bundle","require","updateLink","link","newLink","cloneNode","onload","remove","href","split","Date","now","parentNode","insertBefore","nextSibling","cssTimeout","reloadCSS","setTimeout","links","document","querySelectorAll","i","length","module"],"mappings":"AAAA,ACAA,IDAIA,ACAAY,SAASC,GDAG,IAAhB,CCAqB,cAAR,CAAb;ADCA,SAASZ,kBAAT,GAA8B;AAC5B,ACAF,MDAM,CAACD,ECAEc,ODAP,EAAgB,CCAlB,CAAoBC,IAApB,EAA0B;ADCtBf,ACAF,MAAIgB,UDAUd,ACAAa,KAAKE,SDAjB,ACAY,EAAd;ADCC,ACADD,UAAQE,MAAR,GAAiB,YAAY;AAC3BH,SAAKI,MAAL;ADCF,ACAC,GAFD,MDEOnB,SAAP;AACD,ACACgB,UAAQI,IAAR,GAAeL,KAAKK,IAAL,CAAUC,KAAV,CAAgB,GAAhB,EAAqB,CAArB,IAA0B,GAA1B,GAAgCC,KAAKC,GAAL,EAA/C;AACAR,OAAKS,UAAL,CAAgBC,YAAhB,CAA6BT,OAA7B,EAAsCD,KAAKW,WAA3C;ADCF,ACAC,SDAQxB,YAAT,GAAwB;AACtB;AACA,ACAF,IAAIyB,EDAE,WCAW,IAAjB;ADCI,ACAJ,SAASC,CDAC,IAAIzB,ICAd,CDAU,EAAN,ACAiB;ADClB,ACAD,GDFA,CAEE,ECAEwB,KDAKvB,GAAP,EAAY,ACAd,EAAgB;ADCd,ACAA,QDAIC,UAAU,CAAC,KAAKD,IAAIE,KAAV,EAAiBC,KAAjB,CAAuB,gCAAvB,CAAd;AACA,ACAD,QDAKF,OAAJ,EAAa;AACX,aAAOG,WAAWH,QAAQ,CAAR,CAAX,CAAP;AACD,ACAHsB,eAAaE,WAAW,YAAY;ADCnC,ACAC,QAAIC,QAAQC,SAASC,gBAAT,CAA0B,wBAA1B,CAAZ;AACA,SAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIH,MAAMI,MAA1B,EAAkCD,GAAlC,EAAuC;ADCzC,ACAI,SDAG,CCACrB,EDAR,KCAeJ,UAAP,CAAkBsB,MAAMG,CAAN,EAASb,IAA3B,MAAqCR,OAAOV,YAAP,EAAzC,EAAgE;ADCrE,ACAOY,mBAAWgB,MAAMG,CAAN,CAAX;AACD;ADCP,ACAK,SDAIzB,UAAT,CAAoBC,GAApB,EAAyB;AACvB,SAAO,CAAC,KAAKA,GAAN,EAAWC,OAAX,CAAmB,uCAAnB,EAA4D,IAA5D,IAAoE,GAA3E;AACD,ACAGiB,iBAAa,IAAb;AACD,GATY,EASV,EATU,CAAb;ADUFhB,ACAC,QDAOT,YAAR,GAAuBD,kBAAvB;AACAU,QAAQH,UAAR,GAAqBA,UAArB;ACCA2B,OAAOxB,OAAP,GAAiBiB,SAAjB","file":"3ead2f5d7637c6e90f7b72efafc26287.map","sourcesContent":["var bundleURL = null;\r\nfunction getBundleURLCached() {\r\n  if (!bundleURL) {\r\n    bundleURL = getBundleURL();\r\n  }\r\n\r\n  return bundleURL;\r\n}\r\n\r\nfunction getBundleURL() {\r\n  // Attempt to find the URL of the current script and use that as the base URL\r\n  try {\r\n    throw new Error;\r\n  } catch (err) {\r\n    var matches = ('' + err.stack).match(/(https?|file|ftp):\\/\\/[^)\\n]+/g);\r\n    if (matches) {\r\n      return getBaseURL(matches[0]);\r\n    }\r\n  }\r\n\r\n  return '/';\r\n}\r\n\r\nfunction getBaseURL(url) {\r\n  return ('' + url).replace(/^((?:https?|file|ftp):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\r\n}\r\n\r\nexports.getBundleURL = getBundleURLCached;\r\nexports.getBaseURL = getBaseURL;\r\n","var bundle = require('./bundle-url');\r\n\r\nfunction updateLink(link) {\r\n  var newLink = link.cloneNode();\r\n  newLink.onload = function () {\r\n    link.remove();\r\n  };\r\n  newLink.href = link.href.split('?')[0] + '?' + Date.now();\r\n  link.parentNode.insertBefore(newLink, link.nextSibling);\r\n}\r\n\r\nvar cssTimeout = null;\r\nfunction reloadCSS() {\r\n  if (cssTimeout) {\r\n    return;\r\n  }\r\n\r\n  cssTimeout = setTimeout(function () {\r\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\r\n    for (var i = 0; i < links.length; i++) {\r\n      if (bundle.getBaseURL(links[i].href) === bundle.getBundleURL()) {\r\n        updateLink(links[i]);\r\n      }\r\n    }\r\n\r\n    cssTimeout = null;\r\n  }, 50);\r\n}\r\n\r\nmodule.exports = reloadCSS;\r\n"]}